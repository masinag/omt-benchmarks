(set-option :produce-models true)
(set-logic QF_LRA)
(set-info :notes | Strip-packing problem.|)
(declare-fun x0 () Real)
(declare-fun y0 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(declare-fun z () Real)
(declare-fun c () Real)
(assert (and (= c z) (and (>= x0 0) 
(and (>= y0 0) 
(and (>= x1 0) 
(and (>= y1 0) 
(and (>= x2 0) 
(and (>= y2 0) 
(and (>= x3 0) 
(and (>= y3 0) 
(and (>= x4 0) 
(and (>= y4 0) 
(and (>= x5 0) 
(and (>= y5 0) 
(and (>= x6 0) 
(and (>= y6 0) 
(and (>= x7 0) 
(and (>= y7 0) 
(and (>= x8 0) 
(and (>= y8 0) 
(and (>= z 0) 
(and (>= c 0) 
(and (<= (+ x0 0.4270593308) z) 
(and (<= 0.8306219129 y0) 
(and (<= y0 1.0) 
(and (<= x0 (- 2.9052924031 0.4270593308)) 
(and (>= x0 0) 
(and (<= (+ x1 0.7913474277) z) 
(and (<= 0.6830960168 y1) 
(and (<= y1 1.0) 
(and (<= x1 (- 2.9052924031 0.7913474277)) 
(and (>= x1 0) 
(and (<= (+ x2 0.8967522001) z) 
(and (<= 0.6808608512 y2) 
(and (<= y2 1.0) 
(and (<= x2 (- 2.9052924031 0.8967522001)) 
(and (>= x2 0) 
(and (<= (+ x3 0.049960892) z) 
(and (<= 0.5505992441 y3) 
(and (<= y3 1.0) 
(and (<= x3 (- 2.9052924031 0.049960892)) 
(and (>= x3 0) 
(and (<= (+ x4 0.7401725525) z) 
(and (<= 0.3642741304 y4) 
(and (<= y4 1.0) 
(and (<= x4 (- 2.9052924031 0.7401725525)) 
(and (>= x4 0) 
(and (<= (+ x5 0.0943603238) z) 
(and (<= 0.313745843 y5) 
(and (<= y5 1.0) 
(and (<= x5 (- 2.9052924031 0.0943603238)) 
(and (>= x5 0) 
(and (<= (+ x6 0.0950543053) z) 
(and (<= 0.1278696259 y6) 
(and (<= y6 1.0) 
(and (<= x6 (- 2.9052924031 0.0950543053)) 
(and (>= x6 0) 
(and (<= (+ x7 0.2334907436) z) 
(and (<= 0.0953837622 y7) 
(and (<= y7 1.0) 
(and (<= x7 (- 2.9052924031 0.2334907436)) 
(and (>= x7 0) 
(and (<= (+ x8 0.588476938) z) 
(and (<= 0.0061619872 y8) 
(and (<= y8 1.0) 
(and (<= x8 (- 2.9052924031 0.588476938)) 
(and (>= x8 0) 
(and (<= c 2.9052924031) 
(and (or (<= (+ x0 0.4270593308) x1) (or (<= (+ x1 0.7913474277) x0) (or (>= (- y0 0.8306219129) y1) (or (>= (- y1 0.6830960168) y0))))) 
(and (or (<= (+ x0 0.4270593308) x2) (or (<= (+ x2 0.8967522001) x0) (or (>= (- y0 0.8306219129) y2) (or (>= (- y2 0.6808608512) y0))))) 
(and (or (<= (+ x0 0.4270593308) x3) (or (<= (+ x3 0.049960892) x0) (or (>= (- y0 0.8306219129) y3) (or (>= (- y3 0.5505992441) y0))))) 
(and (or (<= (+ x0 0.4270593308) x4) (or (<= (+ x4 0.7401725525) x0) (or (>= (- y0 0.8306219129) y4) (or (>= (- y4 0.3642741304) y0))))) 
(and (or (<= (+ x0 0.4270593308) x5) (or (<= (+ x5 0.0943603238) x0) (or (>= (- y0 0.8306219129) y5) (or (>= (- y5 0.313745843) y0))))) 
(and (or (<= (+ x0 0.4270593308) x6) (or (<= (+ x6 0.0950543053) x0) (or (>= (- y0 0.8306219129) y6) (or (>= (- y6 0.1278696259) y0))))) 
(and (or (<= (+ x0 0.4270593308) x7) (or (<= (+ x7 0.2334907436) x0) (or (>= (- y0 0.8306219129) y7) (or (>= (- y7 0.0953837622) y0))))) 
(and (or (<= (+ x0 0.4270593308) x8) (or (<= (+ x8 0.588476938) x0) (or (>= (- y0 0.8306219129) y8) (or (>= (- y8 0.0061619872) y0))))) 
(and (or (<= (+ x1 0.7913474277) x2) (or (<= (+ x2 0.8967522001) x1) (or (>= (- y1 0.6830960168) y2) (or (>= (- y2 0.6808608512) y1))))) 
(and (or (<= (+ x1 0.7913474277) x3) (or (<= (+ x3 0.049960892) x1) (or (>= (- y1 0.6830960168) y3) (or (>= (- y3 0.5505992441) y1))))) 
(and (or (<= (+ x1 0.7913474277) x4) (or (<= (+ x4 0.7401725525) x1) (or (>= (- y1 0.6830960168) y4) (or (>= (- y4 0.3642741304) y1))))) 
(and (or (<= (+ x1 0.7913474277) x5) (or (<= (+ x5 0.0943603238) x1) (or (>= (- y1 0.6830960168) y5) (or (>= (- y5 0.313745843) y1))))) 
(and (or (<= (+ x1 0.7913474277) x6) (or (<= (+ x6 0.0950543053) x1) (or (>= (- y1 0.6830960168) y6) (or (>= (- y6 0.1278696259) y1))))) 
(and (or (<= (+ x1 0.7913474277) x7) (or (<= (+ x7 0.2334907436) x1) (or (>= (- y1 0.6830960168) y7) (or (>= (- y7 0.0953837622) y1))))) 
(and (or (<= (+ x1 0.7913474277) x8) (or (<= (+ x8 0.588476938) x1) (or (>= (- y1 0.6830960168) y8) (or (>= (- y8 0.0061619872) y1))))) 
(and (or (<= (+ x2 0.8967522001) x3) (or (<= (+ x3 0.049960892) x2) (or (>= (- y2 0.6808608512) y3) (or (>= (- y3 0.5505992441) y2))))) 
(and (or (<= (+ x2 0.8967522001) x4) (or (<= (+ x4 0.7401725525) x2) (or (>= (- y2 0.6808608512) y4) (or (>= (- y4 0.3642741304) y2))))) 
(and (or (<= (+ x2 0.8967522001) x5) (or (<= (+ x5 0.0943603238) x2) (or (>= (- y2 0.6808608512) y5) (or (>= (- y5 0.313745843) y2))))) 
(and (or (<= (+ x2 0.8967522001) x6) (or (<= (+ x6 0.0950543053) x2) (or (>= (- y2 0.6808608512) y6) (or (>= (- y6 0.1278696259) y2))))) 
(and (or (<= (+ x2 0.8967522001) x7) (or (<= (+ x7 0.2334907436) x2) (or (>= (- y2 0.6808608512) y7) (or (>= (- y7 0.0953837622) y2))))) 
(and (or (<= (+ x2 0.8967522001) x8) (or (<= (+ x8 0.588476938) x2) (or (>= (- y2 0.6808608512) y8) (or (>= (- y8 0.0061619872) y2))))) 
(and (or (<= (+ x3 0.049960892) x4) (or (<= (+ x4 0.7401725525) x3) (or (>= (- y3 0.5505992441) y4) (or (>= (- y4 0.3642741304) y3))))) 
(and (or (<= (+ x3 0.049960892) x5) (or (<= (+ x5 0.0943603238) x3) (or (>= (- y3 0.5505992441) y5) (or (>= (- y5 0.313745843) y3))))) 
(and (or (<= (+ x3 0.049960892) x6) (or (<= (+ x6 0.0950543053) x3) (or (>= (- y3 0.5505992441) y6) (or (>= (- y6 0.1278696259) y3))))) 
(and (or (<= (+ x3 0.049960892) x7) (or (<= (+ x7 0.2334907436) x3) (or (>= (- y3 0.5505992441) y7) (or (>= (- y7 0.0953837622) y3))))) 
(and (or (<= (+ x3 0.049960892) x8) (or (<= (+ x8 0.588476938) x3) (or (>= (- y3 0.5505992441) y8) (or (>= (- y8 0.0061619872) y3))))) 
(and (or (<= (+ x4 0.7401725525) x5) (or (<= (+ x5 0.0943603238) x4) (or (>= (- y4 0.3642741304) y5) (or (>= (- y5 0.313745843) y4))))) 
(and (or (<= (+ x4 0.7401725525) x6) (or (<= (+ x6 0.0950543053) x4) (or (>= (- y4 0.3642741304) y6) (or (>= (- y6 0.1278696259) y4))))) 
(and (or (<= (+ x4 0.7401725525) x7) (or (<= (+ x7 0.2334907436) x4) (or (>= (- y4 0.3642741304) y7) (or (>= (- y7 0.0953837622) y4))))) 
(and (or (<= (+ x4 0.7401725525) x8) (or (<= (+ x8 0.588476938) x4) (or (>= (- y4 0.3642741304) y8) (or (>= (- y8 0.0061619872) y4))))) 
(and (or (<= (+ x5 0.0943603238) x6) (or (<= (+ x6 0.0950543053) x5) (or (>= (- y5 0.313745843) y6) (or (>= (- y6 0.1278696259) y5))))) 
(and (or (<= (+ x5 0.0943603238) x7) (or (<= (+ x7 0.2334907436) x5) (or (>= (- y5 0.313745843) y7) (or (>= (- y7 0.0953837622) y5))))) 
(and (or (<= (+ x5 0.0943603238) x8) (or (<= (+ x8 0.588476938) x5) (or (>= (- y5 0.313745843) y8) (or (>= (- y8 0.0061619872) y5))))) 
(and (or (<= (+ x6 0.0950543053) x7) (or (<= (+ x7 0.2334907436) x6) (or (>= (- y6 0.1278696259) y7) (or (>= (- y7 0.0953837622) y6))))) 
(and (or (<= (+ x6 0.0950543053) x8) (or (<= (+ x8 0.588476938) x6) (or (>= (- y6 0.1278696259) y8) (or (>= (- y8 0.0061619872) y6))))) 
(and (or (<= (+ x7 0.2334907436) x8) (or (<= (+ x8 0.588476938) x7) (or (>= (- y7 0.0953837622) y8) (or (>= (- y8 0.0061619872) y7))))) ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(minimize c)
(check-sat)
(get-objectives)
(exit)
