(set-option :produce-models true)
(set-logic QF_LRA)
(set-info :notes | Strip-packing problem.|)
(declare-fun x0 () Real)
(declare-fun y0 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(declare-fun z () Real)
(declare-fun c () Real)
(assert (and (= c z) (and (>= x0 0) 
(and (>= y0 0) 
(and (>= x1 0) 
(and (>= y1 0) 
(and (>= x2 0) 
(and (>= y2 0) 
(and (>= x3 0) 
(and (>= y3 0) 
(and (>= x4 0) 
(and (>= y4 0) 
(and (>= x5 0) 
(and (>= y5 0) 
(and (>= x6 0) 
(and (>= y6 0) 
(and (>= x7 0) 
(and (>= y7 0) 
(and (>= x8 0) 
(and (>= y8 0) 
(and (>= z 0) 
(and (>= c 0) 
(and (<= (+ x0 0.7961304712) z) 
(and (<= 0.821539237 y0) 
(and (<= y0 1.0) 
(and (<= x0 (- 4.0433625543 0.7961304712)) 
(and (>= x0 0) 
(and (<= (+ x1 0.052921994) z) 
(and (<= 0.6646492241 y1) 
(and (<= y1 1.0) 
(and (<= x1 (- 4.0433625543 0.052921994)) 
(and (>= x1 0) 
(and (<= (+ x2 0.268041027) z) 
(and (<= 0.5664855651 y2) 
(and (<= y2 1.0) 
(and (<= x2 (- 4.0433625543 0.268041027)) 
(and (>= x2 0) 
(and (<= (+ x3 0.8543307449) z) 
(and (<= 0.5450729955 y3) 
(and (<= y3 1.0) 
(and (<= x3 (- 4.0433625543 0.8543307449)) 
(and (>= x3 0) 
(and (<= (+ x4 0.9198462908) z) 
(and (<= 0.5440541188 y4) 
(and (<= y4 1.0) 
(and (<= x4 (- 4.0433625543 0.9198462908)) 
(and (>= x4 0) 
(and (<= (+ x5 0.1999795429) z) 
(and (<= 0.4670985854 y5) 
(and (<= y5 1.0) 
(and (<= x5 (- 4.0433625543 0.1999795429)) 
(and (>= x5 0) 
(and (<= (+ x6 0.2292161943) z) 
(and (<= 0.2944867731 y6) 
(and (<= y6 1.0) 
(and (<= x6 (- 4.0433625543 0.2292161943)) 
(and (>= x6 0) 
(and (<= (+ x7 0.6905940709) z) 
(and (<= 0.2319818513 y7) 
(and (<= y7 1.0) 
(and (<= x7 (- 4.0433625543 0.6905940709)) 
(and (>= x7 0) 
(and (<= (+ x8 0.9521124835) z) 
(and (<= 0.0670375999 y8) 
(and (<= y8 1.0) 
(and (<= x8 (- 4.0433625543 0.9521124835)) 
(and (>= x8 0) 
(and (<= c 4.0433625543) 
(and (or (<= (+ x0 0.7961304712) x1) (or (<= (+ x1 0.052921994) x0) (or (>= (- y0 0.821539237) y1) (or (>= (- y1 0.6646492241) y0))))) 
(and (or (<= (+ x0 0.7961304712) x2) (or (<= (+ x2 0.268041027) x0) (or (>= (- y0 0.821539237) y2) (or (>= (- y2 0.5664855651) y0))))) 
(and (or (<= (+ x0 0.7961304712) x3) (or (<= (+ x3 0.8543307449) x0) (or (>= (- y0 0.821539237) y3) (or (>= (- y3 0.5450729955) y0))))) 
(and (or (<= (+ x0 0.7961304712) x4) (or (<= (+ x4 0.9198462908) x0) (or (>= (- y0 0.821539237) y4) (or (>= (- y4 0.5440541188) y0))))) 
(and (or (<= (+ x0 0.7961304712) x5) (or (<= (+ x5 0.1999795429) x0) (or (>= (- y0 0.821539237) y5) (or (>= (- y5 0.4670985854) y0))))) 
(and (or (<= (+ x0 0.7961304712) x6) (or (<= (+ x6 0.2292161943) x0) (or (>= (- y0 0.821539237) y6) (or (>= (- y6 0.2944867731) y0))))) 
(and (or (<= (+ x0 0.7961304712) x7) (or (<= (+ x7 0.6905940709) x0) (or (>= (- y0 0.821539237) y7) (or (>= (- y7 0.2319818513) y0))))) 
(and (or (<= (+ x0 0.7961304712) x8) (or (<= (+ x8 0.9521124835) x0) (or (>= (- y0 0.821539237) y8) (or (>= (- y8 0.0670375999) y0))))) 
(and (or (<= (+ x1 0.052921994) x2) (or (<= (+ x2 0.268041027) x1) (or (>= (- y1 0.6646492241) y2) (or (>= (- y2 0.5664855651) y1))))) 
(and (or (<= (+ x1 0.052921994) x3) (or (<= (+ x3 0.8543307449) x1) (or (>= (- y1 0.6646492241) y3) (or (>= (- y3 0.5450729955) y1))))) 
(and (or (<= (+ x1 0.052921994) x4) (or (<= (+ x4 0.9198462908) x1) (or (>= (- y1 0.6646492241) y4) (or (>= (- y4 0.5440541188) y1))))) 
(and (or (<= (+ x1 0.052921994) x5) (or (<= (+ x5 0.1999795429) x1) (or (>= (- y1 0.6646492241) y5) (or (>= (- y5 0.4670985854) y1))))) 
(and (or (<= (+ x1 0.052921994) x6) (or (<= (+ x6 0.2292161943) x1) (or (>= (- y1 0.6646492241) y6) (or (>= (- y6 0.2944867731) y1))))) 
(and (or (<= (+ x1 0.052921994) x7) (or (<= (+ x7 0.6905940709) x1) (or (>= (- y1 0.6646492241) y7) (or (>= (- y7 0.2319818513) y1))))) 
(and (or (<= (+ x1 0.052921994) x8) (or (<= (+ x8 0.9521124835) x1) (or (>= (- y1 0.6646492241) y8) (or (>= (- y8 0.0670375999) y1))))) 
(and (or (<= (+ x2 0.268041027) x3) (or (<= (+ x3 0.8543307449) x2) (or (>= (- y2 0.5664855651) y3) (or (>= (- y3 0.5450729955) y2))))) 
(and (or (<= (+ x2 0.268041027) x4) (or (<= (+ x4 0.9198462908) x2) (or (>= (- y2 0.5664855651) y4) (or (>= (- y4 0.5440541188) y2))))) 
(and (or (<= (+ x2 0.268041027) x5) (or (<= (+ x5 0.1999795429) x2) (or (>= (- y2 0.5664855651) y5) (or (>= (- y5 0.4670985854) y2))))) 
(and (or (<= (+ x2 0.268041027) x6) (or (<= (+ x6 0.2292161943) x2) (or (>= (- y2 0.5664855651) y6) (or (>= (- y6 0.2944867731) y2))))) 
(and (or (<= (+ x2 0.268041027) x7) (or (<= (+ x7 0.6905940709) x2) (or (>= (- y2 0.5664855651) y7) (or (>= (- y7 0.2319818513) y2))))) 
(and (or (<= (+ x2 0.268041027) x8) (or (<= (+ x8 0.9521124835) x2) (or (>= (- y2 0.5664855651) y8) (or (>= (- y8 0.0670375999) y2))))) 
(and (or (<= (+ x3 0.8543307449) x4) (or (<= (+ x4 0.9198462908) x3) (or (>= (- y3 0.5450729955) y4) (or (>= (- y4 0.5440541188) y3))))) 
(and (or (<= (+ x3 0.8543307449) x5) (or (<= (+ x5 0.1999795429) x3) (or (>= (- y3 0.5450729955) y5) (or (>= (- y5 0.4670985854) y3))))) 
(and (or (<= (+ x3 0.8543307449) x6) (or (<= (+ x6 0.2292161943) x3) (or (>= (- y3 0.5450729955) y6) (or (>= (- y6 0.2944867731) y3))))) 
(and (or (<= (+ x3 0.8543307449) x7) (or (<= (+ x7 0.6905940709) x3) (or (>= (- y3 0.5450729955) y7) (or (>= (- y7 0.2319818513) y3))))) 
(and (or (<= (+ x3 0.8543307449) x8) (or (<= (+ x8 0.9521124835) x3) (or (>= (- y3 0.5450729955) y8) (or (>= (- y8 0.0670375999) y3))))) 
(and (or (<= (+ x4 0.9198462908) x5) (or (<= (+ x5 0.1999795429) x4) (or (>= (- y4 0.5440541188) y5) (or (>= (- y5 0.4670985854) y4))))) 
(and (or (<= (+ x4 0.9198462908) x6) (or (<= (+ x6 0.2292161943) x4) (or (>= (- y4 0.5440541188) y6) (or (>= (- y6 0.2944867731) y4))))) 
(and (or (<= (+ x4 0.9198462908) x7) (or (<= (+ x7 0.6905940709) x4) (or (>= (- y4 0.5440541188) y7) (or (>= (- y7 0.2319818513) y4))))) 
(and (or (<= (+ x4 0.9198462908) x8) (or (<= (+ x8 0.9521124835) x4) (or (>= (- y4 0.5440541188) y8) (or (>= (- y8 0.0670375999) y4))))) 
(and (or (<= (+ x5 0.1999795429) x6) (or (<= (+ x6 0.2292161943) x5) (or (>= (- y5 0.4670985854) y6) (or (>= (- y6 0.2944867731) y5))))) 
(and (or (<= (+ x5 0.1999795429) x7) (or (<= (+ x7 0.6905940709) x5) (or (>= (- y5 0.4670985854) y7) (or (>= (- y7 0.2319818513) y5))))) 
(and (or (<= (+ x5 0.1999795429) x8) (or (<= (+ x8 0.9521124835) x5) (or (>= (- y5 0.4670985854) y8) (or (>= (- y8 0.0670375999) y5))))) 
(and (or (<= (+ x6 0.2292161943) x7) (or (<= (+ x7 0.6905940709) x6) (or (>= (- y6 0.2944867731) y7) (or (>= (- y7 0.2319818513) y6))))) 
(and (or (<= (+ x6 0.2292161943) x8) (or (<= (+ x8 0.9521124835) x6) (or (>= (- y6 0.2944867731) y8) (or (>= (- y8 0.0670375999) y6))))) 
(and (or (<= (+ x7 0.6905940709) x8) (or (<= (+ x8 0.9521124835) x7) (or (>= (- y7 0.2319818513) y8) (or (>= (- y8 0.0670375999) y7))))) ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(minimize c)
(check-sat)
(get-objectives)
(exit)
