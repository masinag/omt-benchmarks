(set-option :produce-models true)
(set-logic QF_LRA)
(set-info :notes | Strip-packing problem.|)
(declare-fun x0 () Real)
(declare-fun y0 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(declare-fun z () Real)
(declare-fun c () Real)
(assert (and (= c z) (and (>= x0 0) 
(and (>= y0 0) 
(and (>= x1 0) 
(and (>= y1 0) 
(and (>= x2 0) 
(and (>= y2 0) 
(and (>= x3 0) 
(and (>= y3 0) 
(and (>= x4 0) 
(and (>= y4 0) 
(and (>= x5 0) 
(and (>= y5 0) 
(and (>= x6 0) 
(and (>= y6 0) 
(and (>= x7 0) 
(and (>= y7 0) 
(and (>= x8 0) 
(and (>= y8 0) 
(and (>= z 0) 
(and (>= c 0) 
(and (<= (+ x0 0.9452620253) z) 
(and (<= 0.8061976246 y0) 
(and (<= y0 1.0) 
(and (<= x0 (- 5.3980209273 0.9452620253)) 
(and (>= x0 0) 
(and (<= (+ x1 0.7366496989) z) 
(and (<= 0.8005113489 y1) 
(and (<= y1 1.0) 
(and (<= x1 (- 5.3980209273 0.7366496989)) 
(and (>= x1 0) 
(and (<= (+ x2 0.833200298) z) 
(and (<= 0.6523253873 y2) 
(and (<= y2 1.0) 
(and (<= x2 (- 5.3980209273 0.833200298)) 
(and (>= x2 0) 
(and (<= (+ x3 0.2393279736) z) 
(and (<= 0.6506756645 y3) 
(and (<= y3 1.0) 
(and (<= x3 (- 5.3980209273 0.2393279736)) 
(and (>= x3 0) 
(and (<= (+ x4 0.6762466542) z) 
(and (<= 0.3799705148 y4) 
(and (<= y4 1.0) 
(and (<= x4 (- 5.3980209273 0.6762466542)) 
(and (>= x4 0) 
(and (<= (+ x5 0.9758142768) z) 
(and (<= 0.3082619717 y5) 
(and (<= y5 1.0) 
(and (<= x5 (- 5.3980209273 0.9758142768)) 
(and (>= x5 0) 
(and (<= (+ x6 0.634330303) z) 
(and (<= 0.1844383593 y6) 
(and (<= y6 1.0) 
(and (<= x6 (- 5.3980209273 0.634330303)) 
(and (>= x6 0) 
(and (<= (+ x7 0.9915200005) z) 
(and (<= 0.0171422127 y7) 
(and (<= y7 1.0) 
(and (<= x7 (- 5.3980209273 0.9915200005)) 
(and (>= x7 0) 
(and (<= (+ x8 0.1778414938) z) 
(and (<= 0.0009802118 y8) 
(and (<= y8 1.0) 
(and (<= x8 (- 5.3980209273 0.1778414938)) 
(and (>= x8 0) 
(and (<= c 5.3980209273) 
(and (or (<= (+ x0 0.9452620253) x1) (or (<= (+ x1 0.7366496989) x0) (or (>= (- y0 0.8061976246) y1) (or (>= (- y1 0.8005113489) y0))))) 
(and (or (<= (+ x0 0.9452620253) x2) (or (<= (+ x2 0.833200298) x0) (or (>= (- y0 0.8061976246) y2) (or (>= (- y2 0.6523253873) y0))))) 
(and (or (<= (+ x0 0.9452620253) x3) (or (<= (+ x3 0.2393279736) x0) (or (>= (- y0 0.8061976246) y3) (or (>= (- y3 0.6506756645) y0))))) 
(and (or (<= (+ x0 0.9452620253) x4) (or (<= (+ x4 0.6762466542) x0) (or (>= (- y0 0.8061976246) y4) (or (>= (- y4 0.3799705148) y0))))) 
(and (or (<= (+ x0 0.9452620253) x5) (or (<= (+ x5 0.9758142768) x0) (or (>= (- y0 0.8061976246) y5) (or (>= (- y5 0.3082619717) y0))))) 
(and (or (<= (+ x0 0.9452620253) x6) (or (<= (+ x6 0.634330303) x0) (or (>= (- y0 0.8061976246) y6) (or (>= (- y6 0.1844383593) y0))))) 
(and (or (<= (+ x0 0.9452620253) x7) (or (<= (+ x7 0.9915200005) x0) (or (>= (- y0 0.8061976246) y7) (or (>= (- y7 0.0171422127) y0))))) 
(and (or (<= (+ x0 0.9452620253) x8) (or (<= (+ x8 0.1778414938) x0) (or (>= (- y0 0.8061976246) y8) (or (>= (- y8 0.0009802118) y0))))) 
(and (or (<= (+ x1 0.7366496989) x2) (or (<= (+ x2 0.833200298) x1) (or (>= (- y1 0.8005113489) y2) (or (>= (- y2 0.6523253873) y1))))) 
(and (or (<= (+ x1 0.7366496989) x3) (or (<= (+ x3 0.2393279736) x1) (or (>= (- y1 0.8005113489) y3) (or (>= (- y3 0.6506756645) y1))))) 
(and (or (<= (+ x1 0.7366496989) x4) (or (<= (+ x4 0.6762466542) x1) (or (>= (- y1 0.8005113489) y4) (or (>= (- y4 0.3799705148) y1))))) 
(and (or (<= (+ x1 0.7366496989) x5) (or (<= (+ x5 0.9758142768) x1) (or (>= (- y1 0.8005113489) y5) (or (>= (- y5 0.3082619717) y1))))) 
(and (or (<= (+ x1 0.7366496989) x6) (or (<= (+ x6 0.634330303) x1) (or (>= (- y1 0.8005113489) y6) (or (>= (- y6 0.1844383593) y1))))) 
(and (or (<= (+ x1 0.7366496989) x7) (or (<= (+ x7 0.9915200005) x1) (or (>= (- y1 0.8005113489) y7) (or (>= (- y7 0.0171422127) y1))))) 
(and (or (<= (+ x1 0.7366496989) x8) (or (<= (+ x8 0.1778414938) x1) (or (>= (- y1 0.8005113489) y8) (or (>= (- y8 0.0009802118) y1))))) 
(and (or (<= (+ x2 0.833200298) x3) (or (<= (+ x3 0.2393279736) x2) (or (>= (- y2 0.6523253873) y3) (or (>= (- y3 0.6506756645) y2))))) 
(and (or (<= (+ x2 0.833200298) x4) (or (<= (+ x4 0.6762466542) x2) (or (>= (- y2 0.6523253873) y4) (or (>= (- y4 0.3799705148) y2))))) 
(and (or (<= (+ x2 0.833200298) x5) (or (<= (+ x5 0.9758142768) x2) (or (>= (- y2 0.6523253873) y5) (or (>= (- y5 0.3082619717) y2))))) 
(and (or (<= (+ x2 0.833200298) x6) (or (<= (+ x6 0.634330303) x2) (or (>= (- y2 0.6523253873) y6) (or (>= (- y6 0.1844383593) y2))))) 
(and (or (<= (+ x2 0.833200298) x7) (or (<= (+ x7 0.9915200005) x2) (or (>= (- y2 0.6523253873) y7) (or (>= (- y7 0.0171422127) y2))))) 
(and (or (<= (+ x2 0.833200298) x8) (or (<= (+ x8 0.1778414938) x2) (or (>= (- y2 0.6523253873) y8) (or (>= (- y8 0.0009802118) y2))))) 
(and (or (<= (+ x3 0.2393279736) x4) (or (<= (+ x4 0.6762466542) x3) (or (>= (- y3 0.6506756645) y4) (or (>= (- y4 0.3799705148) y3))))) 
(and (or (<= (+ x3 0.2393279736) x5) (or (<= (+ x5 0.9758142768) x3) (or (>= (- y3 0.6506756645) y5) (or (>= (- y5 0.3082619717) y3))))) 
(and (or (<= (+ x3 0.2393279736) x6) (or (<= (+ x6 0.634330303) x3) (or (>= (- y3 0.6506756645) y6) (or (>= (- y6 0.1844383593) y3))))) 
(and (or (<= (+ x3 0.2393279736) x7) (or (<= (+ x7 0.9915200005) x3) (or (>= (- y3 0.6506756645) y7) (or (>= (- y7 0.0171422127) y3))))) 
(and (or (<= (+ x3 0.2393279736) x8) (or (<= (+ x8 0.1778414938) x3) (or (>= (- y3 0.6506756645) y8) (or (>= (- y8 0.0009802118) y3))))) 
(and (or (<= (+ x4 0.6762466542) x5) (or (<= (+ x5 0.9758142768) x4) (or (>= (- y4 0.3799705148) y5) (or (>= (- y5 0.3082619717) y4))))) 
(and (or (<= (+ x4 0.6762466542) x6) (or (<= (+ x6 0.634330303) x4) (or (>= (- y4 0.3799705148) y6) (or (>= (- y6 0.1844383593) y4))))) 
(and (or (<= (+ x4 0.6762466542) x7) (or (<= (+ x7 0.9915200005) x4) (or (>= (- y4 0.3799705148) y7) (or (>= (- y7 0.0171422127) y4))))) 
(and (or (<= (+ x4 0.6762466542) x8) (or (<= (+ x8 0.1778414938) x4) (or (>= (- y4 0.3799705148) y8) (or (>= (- y8 0.0009802118) y4))))) 
(and (or (<= (+ x5 0.9758142768) x6) (or (<= (+ x6 0.634330303) x5) (or (>= (- y5 0.3082619717) y6) (or (>= (- y6 0.1844383593) y5))))) 
(and (or (<= (+ x5 0.9758142768) x7) (or (<= (+ x7 0.9915200005) x5) (or (>= (- y5 0.3082619717) y7) (or (>= (- y7 0.0171422127) y5))))) 
(and (or (<= (+ x5 0.9758142768) x8) (or (<= (+ x8 0.1778414938) x5) (or (>= (- y5 0.3082619717) y8) (or (>= (- y8 0.0009802118) y5))))) 
(and (or (<= (+ x6 0.634330303) x7) (or (<= (+ x7 0.9915200005) x6) (or (>= (- y6 0.1844383593) y7) (or (>= (- y7 0.0171422127) y6))))) 
(and (or (<= (+ x6 0.634330303) x8) (or (<= (+ x8 0.1778414938) x6) (or (>= (- y6 0.1844383593) y8) (or (>= (- y8 0.0009802118) y6))))) 
(and (or (<= (+ x7 0.9915200005) x8) (or (<= (+ x8 0.1778414938) x7) (or (>= (- y7 0.0171422127) y8) (or (>= (- y8 0.0009802118) y7))))) ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(minimize c)
(check-sat)
(get-objectives)
(exit)
