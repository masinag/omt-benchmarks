(set-option :produce-models true)
(set-logic QF_LRA)
(set-info :notes | Strip-packing problem.|)
(declare-fun x0 () Real)
(declare-fun y0 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(declare-fun z () Real)
(declare-fun c () Real)
(assert (and (= c z) (and (>= x0 0) 
(and (>= y0 0) 
(and (>= x1 0) 
(and (>= y1 0) 
(and (>= x2 0) 
(and (>= y2 0) 
(and (>= x3 0) 
(and (>= y3 0) 
(and (>= x4 0) 
(and (>= y4 0) 
(and (>= x5 0) 
(and (>= y5 0) 
(and (>= x6 0) 
(and (>= y6 0) 
(and (>= x7 0) 
(and (>= y7 0) 
(and (>= x8 0) 
(and (>= y8 0) 
(and (>= z 0) 
(and (>= c 0) 
(and (<= (+ x0 0.5676105442) z) 
(and (<= 0.4399118329 y0) 
(and (<= y0 1.0) 
(and (<= x0 (- 1.5672077695 0.5676105442)) 
(and (>= x0 0) 
(and (<= (+ x1 0.4572249347) z) 
(and (<= 0.4238380163 y1) 
(and (<= y1 1.0) 
(and (<= x1 (- 1.5672077695 0.4572249347)) 
(and (>= x1 0) 
(and (<= (+ x2 0.9995972253) z) 
(and (<= 0.373010947 y2) 
(and (<= y2 1.0) 
(and (<= x2 (- 1.5672077695 0.9995972253)) 
(and (>= x2 0) 
(and (<= (+ x3 0.7523573542) z) 
(and (<= 0.2695555415 y3) 
(and (<= y3 1.0) 
(and (<= x3 (- 1.5672077695 0.7523573542)) 
(and (>= x3 0) 
(and (<= (+ x4 0.6544521991) z) 
(and (<= 0.1938987941 y4) 
(and (<= y4 1.0) 
(and (<= x4 (- 1.5672077695 0.6544521991)) 
(and (>= x4 0) 
(and (<= (+ x5 0.2100943678) z) 
(and (<= 0.1249333763 y5) 
(and (<= y5 1.0) 
(and (<= x5 (- 1.5672077695 0.2100943678)) 
(and (>= x5 0) 
(and (<= (+ x6 0.0407524645) z) 
(and (<= 0.08167556 y6) 
(and (<= y6 1.0) 
(and (<= x6 (- 1.5672077695 0.0407524645)) 
(and (>= x6 0) 
(and (<= (+ x7 0.1726588421) z) 
(and (<= 0.0184531034 y7) 
(and (<= y7 1.0) 
(and (<= x7 (- 1.5672077695 0.1726588421)) 
(and (>= x7 0) 
(and (<= (+ x8 0.6712994795) z) 
(and (<= 0.0167860834 y8) 
(and (<= y8 1.0) 
(and (<= x8 (- 1.5672077695 0.6712994795)) 
(and (>= x8 0) 
(and (<= c 1.5672077695) 
(and (or (<= (+ x0 0.5676105442) x1) (or (<= (+ x1 0.4572249347) x0) (or (>= (- y0 0.4399118329) y1) (or (>= (- y1 0.4238380163) y0))))) 
(and (or (<= (+ x0 0.5676105442) x2) (or (<= (+ x2 0.9995972253) x0) (or (>= (- y0 0.4399118329) y2) (or (>= (- y2 0.373010947) y0))))) 
(and (or (<= (+ x0 0.5676105442) x3) (or (<= (+ x3 0.7523573542) x0) (or (>= (- y0 0.4399118329) y3) (or (>= (- y3 0.2695555415) y0))))) 
(and (or (<= (+ x0 0.5676105442) x4) (or (<= (+ x4 0.6544521991) x0) (or (>= (- y0 0.4399118329) y4) (or (>= (- y4 0.1938987941) y0))))) 
(and (or (<= (+ x0 0.5676105442) x5) (or (<= (+ x5 0.2100943678) x0) (or (>= (- y0 0.4399118329) y5) (or (>= (- y5 0.1249333763) y0))))) 
(and (or (<= (+ x0 0.5676105442) x6) (or (<= (+ x6 0.0407524645) x0) (or (>= (- y0 0.4399118329) y6) (or (>= (- y6 0.08167556) y0))))) 
(and (or (<= (+ x0 0.5676105442) x7) (or (<= (+ x7 0.1726588421) x0) (or (>= (- y0 0.4399118329) y7) (or (>= (- y7 0.0184531034) y0))))) 
(and (or (<= (+ x0 0.5676105442) x8) (or (<= (+ x8 0.6712994795) x0) (or (>= (- y0 0.4399118329) y8) (or (>= (- y8 0.0167860834) y0))))) 
(and (or (<= (+ x1 0.4572249347) x2) (or (<= (+ x2 0.9995972253) x1) (or (>= (- y1 0.4238380163) y2) (or (>= (- y2 0.373010947) y1))))) 
(and (or (<= (+ x1 0.4572249347) x3) (or (<= (+ x3 0.7523573542) x1) (or (>= (- y1 0.4238380163) y3) (or (>= (- y3 0.2695555415) y1))))) 
(and (or (<= (+ x1 0.4572249347) x4) (or (<= (+ x4 0.6544521991) x1) (or (>= (- y1 0.4238380163) y4) (or (>= (- y4 0.1938987941) y1))))) 
(and (or (<= (+ x1 0.4572249347) x5) (or (<= (+ x5 0.2100943678) x1) (or (>= (- y1 0.4238380163) y5) (or (>= (- y5 0.1249333763) y1))))) 
(and (or (<= (+ x1 0.4572249347) x6) (or (<= (+ x6 0.0407524645) x1) (or (>= (- y1 0.4238380163) y6) (or (>= (- y6 0.08167556) y1))))) 
(and (or (<= (+ x1 0.4572249347) x7) (or (<= (+ x7 0.1726588421) x1) (or (>= (- y1 0.4238380163) y7) (or (>= (- y7 0.0184531034) y1))))) 
(and (or (<= (+ x1 0.4572249347) x8) (or (<= (+ x8 0.6712994795) x1) (or (>= (- y1 0.4238380163) y8) (or (>= (- y8 0.0167860834) y1))))) 
(and (or (<= (+ x2 0.9995972253) x3) (or (<= (+ x3 0.7523573542) x2) (or (>= (- y2 0.373010947) y3) (or (>= (- y3 0.2695555415) y2))))) 
(and (or (<= (+ x2 0.9995972253) x4) (or (<= (+ x4 0.6544521991) x2) (or (>= (- y2 0.373010947) y4) (or (>= (- y4 0.1938987941) y2))))) 
(and (or (<= (+ x2 0.9995972253) x5) (or (<= (+ x5 0.2100943678) x2) (or (>= (- y2 0.373010947) y5) (or (>= (- y5 0.1249333763) y2))))) 
(and (or (<= (+ x2 0.9995972253) x6) (or (<= (+ x6 0.0407524645) x2) (or (>= (- y2 0.373010947) y6) (or (>= (- y6 0.08167556) y2))))) 
(and (or (<= (+ x2 0.9995972253) x7) (or (<= (+ x7 0.1726588421) x2) (or (>= (- y2 0.373010947) y7) (or (>= (- y7 0.0184531034) y2))))) 
(and (or (<= (+ x2 0.9995972253) x8) (or (<= (+ x8 0.6712994795) x2) (or (>= (- y2 0.373010947) y8) (or (>= (- y8 0.0167860834) y2))))) 
(and (or (<= (+ x3 0.7523573542) x4) (or (<= (+ x4 0.6544521991) x3) (or (>= (- y3 0.2695555415) y4) (or (>= (- y4 0.1938987941) y3))))) 
(and (or (<= (+ x3 0.7523573542) x5) (or (<= (+ x5 0.2100943678) x3) (or (>= (- y3 0.2695555415) y5) (or (>= (- y5 0.1249333763) y3))))) 
(and (or (<= (+ x3 0.7523573542) x6) (or (<= (+ x6 0.0407524645) x3) (or (>= (- y3 0.2695555415) y6) (or (>= (- y6 0.08167556) y3))))) 
(and (or (<= (+ x3 0.7523573542) x7) (or (<= (+ x7 0.1726588421) x3) (or (>= (- y3 0.2695555415) y7) (or (>= (- y7 0.0184531034) y3))))) 
(and (or (<= (+ x3 0.7523573542) x8) (or (<= (+ x8 0.6712994795) x3) (or (>= (- y3 0.2695555415) y8) (or (>= (- y8 0.0167860834) y3))))) 
(and (or (<= (+ x4 0.6544521991) x5) (or (<= (+ x5 0.2100943678) x4) (or (>= (- y4 0.1938987941) y5) (or (>= (- y5 0.1249333763) y4))))) 
(and (or (<= (+ x4 0.6544521991) x6) (or (<= (+ x6 0.0407524645) x4) (or (>= (- y4 0.1938987941) y6) (or (>= (- y6 0.08167556) y4))))) 
(and (or (<= (+ x4 0.6544521991) x7) (or (<= (+ x7 0.1726588421) x4) (or (>= (- y4 0.1938987941) y7) (or (>= (- y7 0.0184531034) y4))))) 
(and (or (<= (+ x4 0.6544521991) x8) (or (<= (+ x8 0.6712994795) x4) (or (>= (- y4 0.1938987941) y8) (or (>= (- y8 0.0167860834) y4))))) 
(and (or (<= (+ x5 0.2100943678) x6) (or (<= (+ x6 0.0407524645) x5) (or (>= (- y5 0.1249333763) y6) (or (>= (- y6 0.08167556) y5))))) 
(and (or (<= (+ x5 0.2100943678) x7) (or (<= (+ x7 0.1726588421) x5) (or (>= (- y5 0.1249333763) y7) (or (>= (- y7 0.0184531034) y5))))) 
(and (or (<= (+ x5 0.2100943678) x8) (or (<= (+ x8 0.6712994795) x5) (or (>= (- y5 0.1249333763) y8) (or (>= (- y8 0.0167860834) y5))))) 
(and (or (<= (+ x6 0.0407524645) x7) (or (<= (+ x7 0.1726588421) x6) (or (>= (- y6 0.08167556) y7) (or (>= (- y7 0.0184531034) y6))))) 
(and (or (<= (+ x6 0.0407524645) x8) (or (<= (+ x8 0.6712994795) x6) (or (>= (- y6 0.08167556) y8) (or (>= (- y8 0.0167860834) y6))))) 
(and (or (<= (+ x7 0.1726588421) x8) (or (<= (+ x8 0.6712994795) x7) (or (>= (- y7 0.0184531034) y8) (or (>= (- y8 0.0167860834) y7))))) ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(minimize c)
(check-sat)
(get-objectives)
(exit)
