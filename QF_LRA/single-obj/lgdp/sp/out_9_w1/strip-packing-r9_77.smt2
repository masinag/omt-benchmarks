(set-option :produce-models true)
(set-logic QF_LRA)
(set-info :notes | Strip-packing problem.|)
(declare-fun x0 () Real)
(declare-fun y0 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(declare-fun z () Real)
(declare-fun c () Real)
(assert (and (= c z) (and (>= x0 0) 
(and (>= y0 0) 
(and (>= x1 0) 
(and (>= y1 0) 
(and (>= x2 0) 
(and (>= y2 0) 
(and (>= x3 0) 
(and (>= y3 0) 
(and (>= x4 0) 
(and (>= y4 0) 
(and (>= x5 0) 
(and (>= y5 0) 
(and (>= x6 0) 
(and (>= y6 0) 
(and (>= x7 0) 
(and (>= y7 0) 
(and (>= x8 0) 
(and (>= y8 0) 
(and (>= z 0) 
(and (>= c 0) 
(and (<= (+ x0 0.2008846309) z) 
(and (<= 0.6740938559 y0) 
(and (<= y0 1.0) 
(and (<= x0 (- 3.4113796059 0.2008846309)) 
(and (>= x0 0) 
(and (<= (+ x1 0.884937463) z) 
(and (<= 0.5237632248 y1) 
(and (<= y1 1.0) 
(and (<= x1 (- 3.4113796059 0.884937463)) 
(and (>= x1 0) 
(and (<= (+ x2 0.4421052709) z) 
(and (<= 0.3886669335 y2) 
(and (<= y2 1.0) 
(and (<= x2 (- 3.4113796059 0.4421052709)) 
(and (>= x2 0) 
(and (<= (+ x3 0.8545285347) z) 
(and (<= 0.3693494151 y3) 
(and (<= y3 1.0) 
(and (<= x3 (- 3.4113796059 0.8545285347)) 
(and (>= x3 0) 
(and (<= (+ x4 0.8273201526) z) 
(and (<= 0.186644739 y4) 
(and (<= y4 1.0) 
(and (<= x4 (- 3.4113796059 0.8273201526)) 
(and (>= x4 0) 
(and (<= (+ x5 0.7595064849) z) 
(and (<= 0.1774441306 y5) 
(and (<= y5 1.0) 
(and (<= x5 (- 3.4113796059 0.7595064849)) 
(and (>= x5 0) 
(and (<= (+ x6 0.4926851019) z) 
(and (<= 0.1643063397 y6) 
(and (<= y6 1.0) 
(and (<= x6 (- 3.4113796059 0.4926851019)) 
(and (>= x6 0) 
(and (<= (+ x7 0.4993802234) z) 
(and (<= 0.1488811651 y7) 
(and (<= y7 1.0) 
(and (<= x7 (- 3.4113796059 0.4993802234)) 
(and (>= x7 0) 
(and (<= (+ x8 0.9716487539) z) 
(and (<= 0.0428240709 y8) 
(and (<= y8 1.0) 
(and (<= x8 (- 3.4113796059 0.9716487539)) 
(and (>= x8 0) 
(and (<= c 3.4113796059) 
(and (or (<= (+ x0 0.2008846309) x1) (or (<= (+ x1 0.884937463) x0) (or (>= (- y0 0.6740938559) y1) (or (>= (- y1 0.5237632248) y0))))) 
(and (or (<= (+ x0 0.2008846309) x2) (or (<= (+ x2 0.4421052709) x0) (or (>= (- y0 0.6740938559) y2) (or (>= (- y2 0.3886669335) y0))))) 
(and (or (<= (+ x0 0.2008846309) x3) (or (<= (+ x3 0.8545285347) x0) (or (>= (- y0 0.6740938559) y3) (or (>= (- y3 0.3693494151) y0))))) 
(and (or (<= (+ x0 0.2008846309) x4) (or (<= (+ x4 0.8273201526) x0) (or (>= (- y0 0.6740938559) y4) (or (>= (- y4 0.186644739) y0))))) 
(and (or (<= (+ x0 0.2008846309) x5) (or (<= (+ x5 0.7595064849) x0) (or (>= (- y0 0.6740938559) y5) (or (>= (- y5 0.1774441306) y0))))) 
(and (or (<= (+ x0 0.2008846309) x6) (or (<= (+ x6 0.4926851019) x0) (or (>= (- y0 0.6740938559) y6) (or (>= (- y6 0.1643063397) y0))))) 
(and (or (<= (+ x0 0.2008846309) x7) (or (<= (+ x7 0.4993802234) x0) (or (>= (- y0 0.6740938559) y7) (or (>= (- y7 0.1488811651) y0))))) 
(and (or (<= (+ x0 0.2008846309) x8) (or (<= (+ x8 0.9716487539) x0) (or (>= (- y0 0.6740938559) y8) (or (>= (- y8 0.0428240709) y0))))) 
(and (or (<= (+ x1 0.884937463) x2) (or (<= (+ x2 0.4421052709) x1) (or (>= (- y1 0.5237632248) y2) (or (>= (- y2 0.3886669335) y1))))) 
(and (or (<= (+ x1 0.884937463) x3) (or (<= (+ x3 0.8545285347) x1) (or (>= (- y1 0.5237632248) y3) (or (>= (- y3 0.3693494151) y1))))) 
(and (or (<= (+ x1 0.884937463) x4) (or (<= (+ x4 0.8273201526) x1) (or (>= (- y1 0.5237632248) y4) (or (>= (- y4 0.186644739) y1))))) 
(and (or (<= (+ x1 0.884937463) x5) (or (<= (+ x5 0.7595064849) x1) (or (>= (- y1 0.5237632248) y5) (or (>= (- y5 0.1774441306) y1))))) 
(and (or (<= (+ x1 0.884937463) x6) (or (<= (+ x6 0.4926851019) x1) (or (>= (- y1 0.5237632248) y6) (or (>= (- y6 0.1643063397) y1))))) 
(and (or (<= (+ x1 0.884937463) x7) (or (<= (+ x7 0.4993802234) x1) (or (>= (- y1 0.5237632248) y7) (or (>= (- y7 0.1488811651) y1))))) 
(and (or (<= (+ x1 0.884937463) x8) (or (<= (+ x8 0.9716487539) x1) (or (>= (- y1 0.5237632248) y8) (or (>= (- y8 0.0428240709) y1))))) 
(and (or (<= (+ x2 0.4421052709) x3) (or (<= (+ x3 0.8545285347) x2) (or (>= (- y2 0.3886669335) y3) (or (>= (- y3 0.3693494151) y2))))) 
(and (or (<= (+ x2 0.4421052709) x4) (or (<= (+ x4 0.8273201526) x2) (or (>= (- y2 0.3886669335) y4) (or (>= (- y4 0.186644739) y2))))) 
(and (or (<= (+ x2 0.4421052709) x5) (or (<= (+ x5 0.7595064849) x2) (or (>= (- y2 0.3886669335) y5) (or (>= (- y5 0.1774441306) y2))))) 
(and (or (<= (+ x2 0.4421052709) x6) (or (<= (+ x6 0.4926851019) x2) (or (>= (- y2 0.3886669335) y6) (or (>= (- y6 0.1643063397) y2))))) 
(and (or (<= (+ x2 0.4421052709) x7) (or (<= (+ x7 0.4993802234) x2) (or (>= (- y2 0.3886669335) y7) (or (>= (- y7 0.1488811651) y2))))) 
(and (or (<= (+ x2 0.4421052709) x8) (or (<= (+ x8 0.9716487539) x2) (or (>= (- y2 0.3886669335) y8) (or (>= (- y8 0.0428240709) y2))))) 
(and (or (<= (+ x3 0.8545285347) x4) (or (<= (+ x4 0.8273201526) x3) (or (>= (- y3 0.3693494151) y4) (or (>= (- y4 0.186644739) y3))))) 
(and (or (<= (+ x3 0.8545285347) x5) (or (<= (+ x5 0.7595064849) x3) (or (>= (- y3 0.3693494151) y5) (or (>= (- y5 0.1774441306) y3))))) 
(and (or (<= (+ x3 0.8545285347) x6) (or (<= (+ x6 0.4926851019) x3) (or (>= (- y3 0.3693494151) y6) (or (>= (- y6 0.1643063397) y3))))) 
(and (or (<= (+ x3 0.8545285347) x7) (or (<= (+ x7 0.4993802234) x3) (or (>= (- y3 0.3693494151) y7) (or (>= (- y7 0.1488811651) y3))))) 
(and (or (<= (+ x3 0.8545285347) x8) (or (<= (+ x8 0.9716487539) x3) (or (>= (- y3 0.3693494151) y8) (or (>= (- y8 0.0428240709) y3))))) 
(and (or (<= (+ x4 0.8273201526) x5) (or (<= (+ x5 0.7595064849) x4) (or (>= (- y4 0.186644739) y5) (or (>= (- y5 0.1774441306) y4))))) 
(and (or (<= (+ x4 0.8273201526) x6) (or (<= (+ x6 0.4926851019) x4) (or (>= (- y4 0.186644739) y6) (or (>= (- y6 0.1643063397) y4))))) 
(and (or (<= (+ x4 0.8273201526) x7) (or (<= (+ x7 0.4993802234) x4) (or (>= (- y4 0.186644739) y7) (or (>= (- y7 0.1488811651) y4))))) 
(and (or (<= (+ x4 0.8273201526) x8) (or (<= (+ x8 0.9716487539) x4) (or (>= (- y4 0.186644739) y8) (or (>= (- y8 0.0428240709) y4))))) 
(and (or (<= (+ x5 0.7595064849) x6) (or (<= (+ x6 0.4926851019) x5) (or (>= (- y5 0.1774441306) y6) (or (>= (- y6 0.1643063397) y5))))) 
(and (or (<= (+ x5 0.7595064849) x7) (or (<= (+ x7 0.4993802234) x5) (or (>= (- y5 0.1774441306) y7) (or (>= (- y7 0.1488811651) y5))))) 
(and (or (<= (+ x5 0.7595064849) x8) (or (<= (+ x8 0.9716487539) x5) (or (>= (- y5 0.1774441306) y8) (or (>= (- y8 0.0428240709) y5))))) 
(and (or (<= (+ x6 0.4926851019) x7) (or (<= (+ x7 0.4993802234) x6) (or (>= (- y6 0.1643063397) y7) (or (>= (- y7 0.1488811651) y6))))) 
(and (or (<= (+ x6 0.4926851019) x8) (or (<= (+ x8 0.9716487539) x6) (or (>= (- y6 0.1643063397) y8) (or (>= (- y8 0.0428240709) y6))))) 
(and (or (<= (+ x7 0.4993802234) x8) (or (<= (+ x8 0.9716487539) x7) (or (>= (- y7 0.1488811651) y8) (or (>= (- y8 0.0428240709) y7))))) ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(minimize c)
(check-sat)
(get-objectives)
(exit)
