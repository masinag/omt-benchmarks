(set-option :produce-models true)
(set-logic QF_LRA)
(set-info :notes | Strip-packing problem.|)
(declare-fun x0 () Real)
(declare-fun y0 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(declare-fun z () Real)
(declare-fun c () Real)
(assert (and (= c z) (and (>= x0 0) 
(and (>= y0 0) 
(and (>= x1 0) 
(and (>= y1 0) 
(and (>= x2 0) 
(and (>= y2 0) 
(and (>= x3 0) 
(and (>= y3 0) 
(and (>= x4 0) 
(and (>= y4 0) 
(and (>= x5 0) 
(and (>= y5 0) 
(and (>= x6 0) 
(and (>= y6 0) 
(and (>= x7 0) 
(and (>= y7 0) 
(and (>= x8 0) 
(and (>= y8 0) 
(and (>= z 0) 
(and (>= c 0) 
(and (<= (+ x0 0.6253124653) z) 
(and (<= 0.9323025321 y0) 
(and (<= y0 1.0) 
(and (<= x0 (- 2.9668727209 0.6253124653)) 
(and (>= x0 0) 
(and (<= (+ x1 0.5794344417) z) 
(and (<= 0.7690638148 y1) 
(and (<= y1 1.0) 
(and (<= x1 (- 2.9668727209 0.5794344417)) 
(and (>= x1 0) 
(and (<= (+ x2 0.4430145239) z) 
(and (<= 0.6153485426 y2) 
(and (<= y2 1.0) 
(and (<= x2 (- 2.9668727209 0.4430145239)) 
(and (>= x2 0) 
(and (<= (+ x3 0.5263281118) z) 
(and (<= 0.4767205246 y3) 
(and (<= y3 1.0) 
(and (<= x3 (- 2.9668727209 0.5263281118)) 
(and (>= x3 0) 
(and (<= (+ x4 0.034080812) z) 
(and (<= 0.440244086 y4) 
(and (<= y4 1.0) 
(and (<= x4 (- 2.9668727209 0.034080812)) 
(and (>= x4 0) 
(and (<= (+ x5 0.7927831782) z) 
(and (<= 0.2409534635 y5) 
(and (<= y5 1.0) 
(and (<= x5 (- 2.9668727209 0.7927831782)) 
(and (>= x5 0) 
(and (<= (+ x6 0.7890897911) z) 
(and (<= 0.0703414039 y6) 
(and (<= y6 1.0) 
(and (<= x6 (- 2.9668727209 0.7890897911)) 
(and (>= x6 0) 
(and (<= (+ x7 0.2323399369) z) 
(and (<= 0.0113939723 y7) 
(and (<= y7 1.0) 
(and (<= x7 (- 2.9668727209 0.2323399369)) 
(and (>= x7 0) 
(and (<= (+ x8 0.3567800875) z) 
(and (<= 0.0074030491 y8) 
(and (<= y8 1.0) 
(and (<= x8 (- 2.9668727209 0.3567800875)) 
(and (>= x8 0) 
(and (<= c 2.9668727209) 
(and (or (<= (+ x0 0.6253124653) x1) (or (<= (+ x1 0.5794344417) x0) (or (>= (- y0 0.9323025321) y1) (or (>= (- y1 0.7690638148) y0))))) 
(and (or (<= (+ x0 0.6253124653) x2) (or (<= (+ x2 0.4430145239) x0) (or (>= (- y0 0.9323025321) y2) (or (>= (- y2 0.6153485426) y0))))) 
(and (or (<= (+ x0 0.6253124653) x3) (or (<= (+ x3 0.5263281118) x0) (or (>= (- y0 0.9323025321) y3) (or (>= (- y3 0.4767205246) y0))))) 
(and (or (<= (+ x0 0.6253124653) x4) (or (<= (+ x4 0.034080812) x0) (or (>= (- y0 0.9323025321) y4) (or (>= (- y4 0.440244086) y0))))) 
(and (or (<= (+ x0 0.6253124653) x5) (or (<= (+ x5 0.7927831782) x0) (or (>= (- y0 0.9323025321) y5) (or (>= (- y5 0.2409534635) y0))))) 
(and (or (<= (+ x0 0.6253124653) x6) (or (<= (+ x6 0.7890897911) x0) (or (>= (- y0 0.9323025321) y6) (or (>= (- y6 0.0703414039) y0))))) 
(and (or (<= (+ x0 0.6253124653) x7) (or (<= (+ x7 0.2323399369) x0) (or (>= (- y0 0.9323025321) y7) (or (>= (- y7 0.0113939723) y0))))) 
(and (or (<= (+ x0 0.6253124653) x8) (or (<= (+ x8 0.3567800875) x0) (or (>= (- y0 0.9323025321) y8) (or (>= (- y8 0.0074030491) y0))))) 
(and (or (<= (+ x1 0.5794344417) x2) (or (<= (+ x2 0.4430145239) x1) (or (>= (- y1 0.7690638148) y2) (or (>= (- y2 0.6153485426) y1))))) 
(and (or (<= (+ x1 0.5794344417) x3) (or (<= (+ x3 0.5263281118) x1) (or (>= (- y1 0.7690638148) y3) (or (>= (- y3 0.4767205246) y1))))) 
(and (or (<= (+ x1 0.5794344417) x4) (or (<= (+ x4 0.034080812) x1) (or (>= (- y1 0.7690638148) y4) (or (>= (- y4 0.440244086) y1))))) 
(and (or (<= (+ x1 0.5794344417) x5) (or (<= (+ x5 0.7927831782) x1) (or (>= (- y1 0.7690638148) y5) (or (>= (- y5 0.2409534635) y1))))) 
(and (or (<= (+ x1 0.5794344417) x6) (or (<= (+ x6 0.7890897911) x1) (or (>= (- y1 0.7690638148) y6) (or (>= (- y6 0.0703414039) y1))))) 
(and (or (<= (+ x1 0.5794344417) x7) (or (<= (+ x7 0.2323399369) x1) (or (>= (- y1 0.7690638148) y7) (or (>= (- y7 0.0113939723) y1))))) 
(and (or (<= (+ x1 0.5794344417) x8) (or (<= (+ x8 0.3567800875) x1) (or (>= (- y1 0.7690638148) y8) (or (>= (- y8 0.0074030491) y1))))) 
(and (or (<= (+ x2 0.4430145239) x3) (or (<= (+ x3 0.5263281118) x2) (or (>= (- y2 0.6153485426) y3) (or (>= (- y3 0.4767205246) y2))))) 
(and (or (<= (+ x2 0.4430145239) x4) (or (<= (+ x4 0.034080812) x2) (or (>= (- y2 0.6153485426) y4) (or (>= (- y4 0.440244086) y2))))) 
(and (or (<= (+ x2 0.4430145239) x5) (or (<= (+ x5 0.7927831782) x2) (or (>= (- y2 0.6153485426) y5) (or (>= (- y5 0.2409534635) y2))))) 
(and (or (<= (+ x2 0.4430145239) x6) (or (<= (+ x6 0.7890897911) x2) (or (>= (- y2 0.6153485426) y6) (or (>= (- y6 0.0703414039) y2))))) 
(and (or (<= (+ x2 0.4430145239) x7) (or (<= (+ x7 0.2323399369) x2) (or (>= (- y2 0.6153485426) y7) (or (>= (- y7 0.0113939723) y2))))) 
(and (or (<= (+ x2 0.4430145239) x8) (or (<= (+ x8 0.3567800875) x2) (or (>= (- y2 0.6153485426) y8) (or (>= (- y8 0.0074030491) y2))))) 
(and (or (<= (+ x3 0.5263281118) x4) (or (<= (+ x4 0.034080812) x3) (or (>= (- y3 0.4767205246) y4) (or (>= (- y4 0.440244086) y3))))) 
(and (or (<= (+ x3 0.5263281118) x5) (or (<= (+ x5 0.7927831782) x3) (or (>= (- y3 0.4767205246) y5) (or (>= (- y5 0.2409534635) y3))))) 
(and (or (<= (+ x3 0.5263281118) x6) (or (<= (+ x6 0.7890897911) x3) (or (>= (- y3 0.4767205246) y6) (or (>= (- y6 0.0703414039) y3))))) 
(and (or (<= (+ x3 0.5263281118) x7) (or (<= (+ x7 0.2323399369) x3) (or (>= (- y3 0.4767205246) y7) (or (>= (- y7 0.0113939723) y3))))) 
(and (or (<= (+ x3 0.5263281118) x8) (or (<= (+ x8 0.3567800875) x3) (or (>= (- y3 0.4767205246) y8) (or (>= (- y8 0.0074030491) y3))))) 
(and (or (<= (+ x4 0.034080812) x5) (or (<= (+ x5 0.7927831782) x4) (or (>= (- y4 0.440244086) y5) (or (>= (- y5 0.2409534635) y4))))) 
(and (or (<= (+ x4 0.034080812) x6) (or (<= (+ x6 0.7890897911) x4) (or (>= (- y4 0.440244086) y6) (or (>= (- y6 0.0703414039) y4))))) 
(and (or (<= (+ x4 0.034080812) x7) (or (<= (+ x7 0.2323399369) x4) (or (>= (- y4 0.440244086) y7) (or (>= (- y7 0.0113939723) y4))))) 
(and (or (<= (+ x4 0.034080812) x8) (or (<= (+ x8 0.3567800875) x4) (or (>= (- y4 0.440244086) y8) (or (>= (- y8 0.0074030491) y4))))) 
(and (or (<= (+ x5 0.7927831782) x6) (or (<= (+ x6 0.7890897911) x5) (or (>= (- y5 0.2409534635) y6) (or (>= (- y6 0.0703414039) y5))))) 
(and (or (<= (+ x5 0.7927831782) x7) (or (<= (+ x7 0.2323399369) x5) (or (>= (- y5 0.2409534635) y7) (or (>= (- y7 0.0113939723) y5))))) 
(and (or (<= (+ x5 0.7927831782) x8) (or (<= (+ x8 0.3567800875) x5) (or (>= (- y5 0.2409534635) y8) (or (>= (- y8 0.0074030491) y5))))) 
(and (or (<= (+ x6 0.7890897911) x7) (or (<= (+ x7 0.2323399369) x6) (or (>= (- y6 0.0703414039) y7) (or (>= (- y7 0.0113939723) y6))))) 
(and (or (<= (+ x6 0.7890897911) x8) (or (<= (+ x8 0.3567800875) x6) (or (>= (- y6 0.0703414039) y8) (or (>= (- y8 0.0074030491) y6))))) 
(and (or (<= (+ x7 0.2323399369) x8) (or (<= (+ x8 0.3567800875) x7) (or (>= (- y7 0.0113939723) y8) (or (>= (- y8 0.0074030491) y7))))) ))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(minimize c)
(check-sat)
(get-objectives)
(exit)
